name: Lint

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  yaml-lint:
    name: YAML Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: YAML Lint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: kubernetes/ helm/
          config_file: .yamllint.yml
          strict: true

  kubernetes-manifests:
    name: Validate Kubernetes Manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Validate manifests
        run: |
          for file in $(find kubernetes -name '*.yaml'); do
            echo "Validating $file"
            kubectl apply --dry-run=client -f $file
          done

  helm-lint:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.13.0'

      - name: Helm Lint
        run: |
          cd helm/observability-stack
          helm lint .
          helm template . --debug

  docker-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Backend Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: apps/backend/Dockerfile
          failure-threshold: warning

      - name: Lint Frontend Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: apps/frontend/Dockerfile
          failure-threshold: warning

  go-lint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Go Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: apps/backend

  node-lint:
    name: Node.js Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: apps/frontend
        run: npm ci

      - name: Run ESLint
        working-directory: apps/frontend
        run: npm run lint

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Markdown Lint
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: '**/*.md'

  check-all:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: 
      - yaml-lint
      - kubernetes-manifests
      - helm-lint
      - docker-lint
      - go-lint
      - node-lint
      - security-scan
      - markdown-lint
    steps:
      - name: All checks passed
        run: echo "All lint checks passed successfully!"
